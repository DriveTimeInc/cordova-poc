version: 2
jobs:
  #build-and-test:
  build:
    # macos:
    #   xcode: "9.0"
    working_directory: ~/code
    docker:
      - image: circleci/android:api-27-node8-alpha
    environment:
      JVM_OPTS: -Xmx3200m
    steps:
      - checkout
      # - restore_cache:
      #     key: jars-{{ checksum "platforms/android/build.gradle" }}-{{ checksum  "platforms/android/app/build.gradle" }}
      - run:
          name: Download Dependencies
          command: |
            ./platforms/android/gradle
            ./platforms/android/gradlew androidDependencies
      - save_cache:
          paths:
            - ~/platforms/android/.gradle
          key: jars-{{ checksum "platforms/android/build.gradle" }}-{{ checksum  "platforms/android/app/build.gradle" }}
      - run:
          name: Run Tests
          command: ./platforms/android/gradlew lint test
      - store_artifacts:
          path: platforms/android/app/build/reports
          destination: reports
      - store_test_results:
          path: platforms/android/app/build/test-results





      # - checkout
      # # Download CocoaPods specs via HTTPS (faster than Git)
      # # and install CocoaPods.


      # - brew list -1 | while read line; do brew unlink $line; brew link $line; done
      # - brew install node && sudo brew postinstall node
      # - brew install caskroom/cask/brew-cask
      # - brew cask install java
      # - brew install android-sdk
      # - npm install -g cordova ios-deploy ios-sim
      # - gem update fastlane
      # - ( sleep 5 && while [ 1 ]; do sleep 1; echo y; done ) | android update sdk --no-ui --all --filter platform-tools,build-tools-27.0.1,android-27




  # deploy:
  #   macos:
  #     xcode: 8.3.3

  #   steps:
  #     - checkout

  #     # Set up code signing via Fastlane Match.
  #     - run:
  #         name: Set up code signing
  #         command: fastlane match development --readonly

  #     # Build the release version of the app.
  #     - run:
  #         name: Build IPA
  #         command: bundle exec fastlane gym

  #     # Store the IPA file in the build artifacts
  #     - store_artifacts:
  #         path: ./MyApp.ipa
  #         destination: ipa

  #     # Deploy!
  #     - run:
  #         name: Deploy to App Store
  #         command: bundle exec fastlane spaceship


# workflows:
#   version: 2
#   build-and-deploy:
#     jobs:
#       - build-and-test
#       - deploy:
#           requires:
#             - build-and-test
#           filters:
#             branches:
#               only: master




# machine:
#   environment:
#     XCODE_SCHEME: "platforms/ios/cordovapoc.xcworkspace"

# general:
#   branches:
#     only:
#     - master

# dependencies:
#   pre:
#     - brew list -1 | while read line; do brew unlink $line; brew link $line; done
#     - brew install node && sudo brew postinstall node
#     - brew install caskroom/cask/brew-cask
#     - brew cask install java
#     - brew install android-sdk
#     - npm install -g cordova ios-deploy ios-sim
#     - gem update fastlane
#     - ( sleep 5 && while [ 1 ]; do sleep 1; echo y; done ) | android update sdk --no-ui --all --filter platform-tools,build-tools-27.0.1,android-27
#   override:
#     - sudo npm cache clean
#     - sudo npm install -g cordova
#     - sudo npm install -g bamlab/cordova-deploy
#     - npm install
#     # - ionic state restore
#     # - ionic prepare
#     - ./builds/sign-ios.sh

# test:
#   override:
#     - echo "Do your tests here"

# deployment:
#   beta_distribution:
#     branch: 'master'
#     commands:
#       - cordova build android --release
#       - cordova-deploy --build --android --ios --iosid $HOCKEY_IOS_APP_ID --apikey $HOCKEY_API_KEY --apk ./platforms/android/build/outputs/apk/android-debug.apk --andid  $HOCKEY_ANDROID_APP_ID --notes "Version générée automatiquement par $CIRCLE_USERNAME"
#       - ruby fastlane/select_xcode_signing_method.rb -p platforms/ios/cordova-poc.xcodeproj -t cordova-poc -m 'Manual' -b $CIRCLE_BUILD_NUM -i platforms/ios/cordova-poc/cordova-poc-Info.plist
#       - fastlane ios beta
#       - cp -R ./dist $CIRCLE_ARTIFACTS
